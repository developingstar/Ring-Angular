.page-wrapper
  #users.content-wrapper
    form.form-group(#userForm="ngForm" (ngSubmit)="saveUser(userForm.valid)" novalidate)
      .header-nav
        h1.headers
          | {{title}}
        .button-group
          button.users-btn.primary-button(type="submit" [ngClass]="{'btn-disabled': disableFlag === true}" [disabled]="disableFlag")
            | Save
          button.users-btn.secondary-button(type="button" (click)="goBack()") 
            | Cancel   
      .wrapper-content 
        .item-info.names
          .item-info
            .input-label
              | FIRST NAME
              .invalid-validation([hidden]="firstName.valid || (firstName.pristine && !userForm.submitted)")
                | First Name is required
            input.user-input(type="text" name="firstName" [(ngModel)]='newUser.first_name' (ngModelChange)="onChange($event)" #firstName="ngModel" required) 
          .item-info
            .input-label
              | LAST NAME
              .invalid-validation([hidden]="lastName.valid || (lastName.pristine && !userForm.submitted)")
                | Last Name is required
            input.user-input(type="text" name="lastName" [(ngModel)]='newUser.last_name' (ngModelChange)="onChange($event)" #lastName="ngModel" required)    
        .item-info
          .input-label
            | USER TYPE
            .invalid-validation([hidden]="selectedType.length > 0 || !userForm.submitted")
              | Type is required
          angular2-multiselect(
            name = 'type'
            [data]='typeList'
            [(ngModel)]='selectedType'
            [settings]='ktsSelectSettings'
            (onSelect)='onTypeSelect($event)'
            (onDeSelect)='onTypeDeSelect($event)'
          )                           
        .item-info
          .input-label
            | SCHOOL
            .invalid-validation([hidden]="selectedSchool.length > 0 || !userForm.submitted")
              | School is required
          angular2-multiselect(
            name = 'school'
            [data]='schoolList'
            [(ngModel)]='selectedSchool'
            [settings]='ktsSelectSettings'
            (onSelect)='onSchoolSelect($event)'
            (onDeSelect)='onSchoolDeSelect($event)'
          )
        .item-info
          .input-label
            | EMAIL
            .invalid-validation([hidden]="email.valid || (email.pristine && !userForm.submitted)")
              | Email link is required
            .invalid-validation([hidden]="!newUser.email || newUser.email === '' || validEmail(newUser.email) || (email.pristine && !userForm.submitted)")
              | Email is not correct
          input.user-input([(ngModel)]="newUser.email" name="email" #email="ngModel" (ngModelChange)="onChange($event)" required) 
        .item-info
          .input-label
            | PASSWORD
            .invalid-validation([hidden]="psw.valid || (psw.pristine && !userForm.submitted)")
                | Password is required
          input.user-input(type="password" name="psw" #psw="ngModel"  [(ngModel)]='newUser.password' (ngModelChange)="onChange($event)" required)
        .item-info   
          button.users-btn.secondary-button.delete-user((click)='deleteUser()') 
            | Delete User  
                      
